generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conversation {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Message   Message[]
  User      User[]    @relation("UserConversations")
}

model Message {
  id                            Int           @id @default(autoincrement())
  senderId                      Int
  receiverId                    Int
  message                       String
  createdAt                     DateTime      @default(now())
  updatedAt                     DateTime      @updatedAt
  conversationId                Int?
  Conversation                  Conversation? @relation(fields: [conversationId], references: [id])
  User_Message_receiverIdToUser User          @relation("Message_receiverIdToUser", fields: [receiverId], references: [id])
  User_Message_senderIdToUser   User          @relation("Message_senderIdToUser", fields: [senderId], references: [id])
}

model User {
  id                               Int            @id @default(autoincrement())
  email                            String         @unique
  username                         String?        @unique
  password                         String?
  name                             String?
  profilePic                       String?
  connections                      User[]         @relation("UserConnections")
  connectedTo                      User[]         @relation("UserConnections")
  createdAt                        DateTime       @default(now())
  updatedAt                        DateTime?
  Message_Message_receiverIdToUser Message[]      @relation("Message_receiverIdToUser")
  Message_Message_senderIdToUser   Message[]      @relation("Message_senderIdToUser")
  Conversation                     Conversation[] @relation("UserConversations")
  notifications                    notification[] @relation("UserNotifications")
  connectionStatus                 String         @default("pending") // status of connection: "pending", "confirmed", "rejected"
}

model notification {
  id                              Int             @id @default(autoincrement())
  type                            String          // "Request" or "MsgReceive"
  senderId                        Int
  message                         String?         // Only for "MsgReceive" type
  status                          String          @default("unread") // "unread", "read"
  createdAt                       DateTime        @default(now())
  userId                          Int             //foriegn key
  user                            User            @relation("UserNotifications", fields: [userId], references: [id])
}
